return {
    "nvim-telescope/telescope.nvim",
    tag = "0.1.8",
    dependencies = {
        { "nvim-telescope/telescope-fzf-native.nvim", build = "make", cond = vim.fn.executable("make") == 1 },
        { "nvim-telescope/telescope-ui-select.nvim" },
    },
    config = function()
        local ok, telescope = pcall(require, "telescope")
        if not ok then
            vim.notify("telescope.nvim not found!", vim.log.levels.ERROR)
            return
        end

        local actions = require("telescope.actions")
        local builtin = require("telescope.builtin")
        local themes  = require("telescope.themes")

        ---------------------------------------------------------------------
        -- THEMED WRAPPERS --------------------------------------------------
        ---------------------------------------------------------------------
        local M       = {}

        -- ░█▀▀░█░█░█▀▀░░░█▀▀░█▀█░█░█
        -- ░█░█░█▀█░█▀▀░░░█░░░█░█░█▀▄
        -- ░▀▀▀░▀░▀░▀▀▀░░░▀▀▀░▀░▀░▀░▀
        function M.files()
            builtin.find_files(themes.get_dropdown({
                prompt_title   = "Files",
                results_height = 15,
                previewer      = false,
            }))
        end

        -- ░█░░░█▀█░█▄█░█▀█
        -- ░█░░░█▀█░█░█░█▀█
        -- ░▀▀▀░▀░▀░▀░▀░▀░▀
        function M.grep()
            builtin.live_grep({
                layout_strategy = "vertical",
                layout_config   = {
                    width           = 0.5,
                    height          = 0.95,
                    prompt_position = "top",
                },
            })
        end

        -- ░█▄▄░█░█░█▀▀░█▀█░█▀▀░█▀█
        -- ░█▄█░█▀█░█░█░█░█░█▀▀░█░█
        -- ░▀░▀░▀░▀░▀▀▀░▀▀▀░▀▀▀░▀░▀
        function M.buffers()
            builtin.buffers(themes.get_cursor({ previewer = false }))
        end

        -- ░█▀▄░█▀▀░█░█░▀█▀░█░█
        -- ░█▀▄░█▀▀░█░█░░█░░█▀█
        -- ░▀░▀░▀▀▀░▀▀▀░░▀░░▀░▀
        function M.git_status()
            builtin.git_status(themes.get_ivy({ layout_config = { height = 15 } }))
        end

        function M.treesitter_dropdown()
            builtin.treesitter(themes.get_dropdown({
                border = true,
                previewer = true,
                shorten_path = false,
                layout_config = {
                    width = 0.8,
                    height = 0.7,
                },
            }))
        end

        -- ░█▀▀░█▀▄░█▀█░█▀▀░▀█▀░▄▀█░▀█▀░█▀█░█▀▀
        -- ░█▄▄░█▀▄░█▀█░▀▀█░░█░░█▀█░░█░░█░█░█▀▀
        -- ░▀░░░▀░▀░▀░▀░▀▀▀░░▀░░▀░▀░░▀░░▀░▀░▀▀▀
        function M.diagnostics_buffer()
            builtin.diagnostics({
                bufnr = 0, -- Current buffer only
                layout_strategy = "cursor",
                layout_config = {
                    width = 0.8,
                    height = 0.4,
                },
                prompt_title = "Current Buffer Diagnostics",
                border = true,
            })
        end

        function M.diagnostics_workspace()
            builtin.diagnostics({
                layout_strategy = "vertical",
                layout_config = {
                    width = 0.9,
                    height = 0.8,
                    preview_height = 0.6,
                    mirror = true,
                    prompt_position = "top",
                },
                prompt_title = "Workspace Diagnostics",
                border = true,
            })
        end

        ---------------------------------------------------------------------
        -- CORE SETUP -------------------------------------------------------
        ---------------------------------------------------------------------

        telescope.setup({
            defaults = {
                prompt_prefix   = "> ",
                selection_caret = " ",
                winblend        = 0,
                path_display    = { "truncate" },

                mappings        = {
                    i = {
                        ["<C-j>"] = actions.move_selection_next,
                        ["<C-k>"] = actions.move_selection_previous,
                        ["<C-q>"] = actions.smart_send_to_qflist + actions.open_qflist,
                    },
                    n = { ["q"] = actions.close },
                },

                layout_strategy = "horizontal",
                layout_config   = {
                    horizontal     = {
                        prompt_position = "top",
                        preview_width   = 0.55,
                        results_width   = 0.45,
                    },
                    vertical       = { mirror = false },
                    width          = 0.85,
                    height         = 0.85,
                    preview_cutoff = 120,
                },
            },

            pickers = {
                find_files = {
                    theme     = "dropdown",
                    previewer = false,
                },
                buffers = {
                    theme         = "cursor",
                    previewer     = false,
                    initial_mode  = "normal",
                    sort_lastused = true,
                    mappings      = {
                        n = { ["d"] = actions.delete_buffer },
                    },
                },
                live_grep = {
                    layout_strategy = "vertical",
                },
                git_status = { theme = "ivy" },
            },

            extensions = {
                ["ui-select"] = {
                    themes.get_dropdown({})
                },
            },
        })

        ----------------------------------------------------------------------
        -- EXTENSIONS --------------------------------------------------------
        ----------------------------------------------------------------------
        pcall(telescope.load_extension, "fzf")
        pcall(telescope.load_extension, "ui-select")

        ----------------------------------------------------------------------
        -- KEYMAPS -----------------------------------------------------------
        ----------------------------------------------------------------------
        vim.keymap.set("n", "<leader>ff", M.files, { desc = "[T] files (dropdown)" })
        vim.keymap.set("n", "<leader>fg", M.grep, { desc = "[T] live grep (vertical)" })
        vim.keymap.set("n", "<leader>fb", M.buffers, { desc = "[T] buffers (cursor)" })
        vim.keymap.set("n", "<leader>fs", M.git_status, { desc = "[T] git status (ivy)" })
        vim.keymap.set("n", "<leader>ft", M.treesitter_dropdown, { desc = "Treesitter (Dropdown)" }) -- deep

        vim.keymap.set("n", "<leader>gd",M.diagnostics_buffer, { desc = "[T] get diag" })
        vim.keymap.set("n", "<leader>gD",M.diagnostics_workspace, { desc = "[T] get project diag" })

-- -------------------------------------------------
        vim.keymap.set('n', '<leader>fc', builtin.commands, { desc = '[T] commands' })
        vim.keymap.set('n', '<leader>fk', builtin.keymaps, { desc = '[T] keymaps' })
        vim.keymap.set('n', '<leader>fs', builtin.current_buffer_fuzzy_find, { desc = '[T] current buffer fuzzy find' })
        vim.keymap.set('n', '<leader>fS', builtin.spell_suggest, { desc = '[T] spell suggest' })

        return M
    end,
}
