set preview true
set previewer ~/.config/lf/lf_kitty_preview
set cleaner   ~/.config/lf/lf_kitty_clean
map i :set preview!


# SUPER = SHIFT + CMD + ALT + OPTION

# Basic Settings
set hidden false
set ignorecase true
set icons true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
    read ans
    mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd setmacwallpaper ${{
    path="$f"
    osascript -e 'tell application "Finder" to set desktop picture to POSIX file "'"$path"'"'
    ret=$?
    if [ $ret -eq 0 ]; then 
        echo "Wallpaper set successfully"
    else 
        echo "Operation failed."
    fi
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash-ClI bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}
cmd restore_trash ${{
  trash-restore
}}



# THIS WORKEDDDD 
# cmd open_in_code ${{
#     code "$PWD"
# }}



# Bindings
map d
map m
map <enter> $lvim "$f"


# opening using spevcific app
map oc $code "$f" # taget 1 file
map oC $code "$PWD" # code .
map ov $nvim "$f"
#map ok $kitty "$PWD" & 

# wallpaper for mac
map zb setmacwallpaper

map au unarchive
map ae $wine "$f"




# Basic Functions
map . set hidden!
map dd trash
map dr restore_trash
map p paste
map x cut
map y copy
#map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear

# Movement
map gD cd ~/downloads
map gd cd ~/desk
map gp cd ~/desk/playground
map gr cd ~/myrepositories


map gc cd ~/.config
map go cd ~/obsidian

map gv cd ~/videos

map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files







###### VIM 
# set hiddenfiles *.class

