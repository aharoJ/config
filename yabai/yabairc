#!/usr/bin/env sh
#YABAI STUFF

# bsp or float (default: bsp)
#yabai -m config layout bsp
#yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
#sudo yabai --load-sa

# for this to work you must configure sudo such that
# it will be able to run the command without password
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

#### float system preferences. Most of these just ENABLE yabai form resizing them.
# yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Karabiner-Elements$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Preview$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Keka$" sticky=on layer=above manage=off
yabai -m rule --add app="^Alfred Preferences$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Disk Utility$" sticky=on layer=above manage=off
# yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
# yabai -m rule --add app="^Path Finder$" manage=off
yabai -m rule --add app="^TeamViewer$" sticky=off layer=above manage=off
yabai -m rule --add app="Fantastical" manage=off
yabai -m rule --add app="^Spotify$" manage=off
# yabai -m rule --add app="^console$" manage=off
yabai -m rule --add app="^sketchybar$" sticky=on layer=above manage=off

# ~~~~~~~~~~~~~~~~~~~~~~   Iphone Developing with MAUI   ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
yabai -m rule --add app="^Simulator$" manage=off
# Window -> Stay on top

## Some random global settings
#yabai -m config focus_follows_mouse          autoraise
#yabai -m config focus_follows_mouse          on
# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child
yabai -m config window_topmost off
#yabai -m config window_shadow float
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.00
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.97

# ~~~~~~~~~~~~~~~~~~~~~~   Limelight build into Yabai   ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# yabai -m config window_border on # on | off
# yabai -m config window_border_width 2
# yabai -m config active_window_border_color 0xFF40FF00
# yabai -m config normal_window_border_color 0x00FFFFFF
# yabai -m config insert_feedback_color 0xffd75f5f
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ...........       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

## some other settings
yabai -m config auto_balance off
yabai -m config split_ratio 0.50
# # set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier ctrl
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

## Change how yabai looks
yabai -m config layout bsp
yabai -m config top_padding 2
yabai -m config bottom_padding 2
yabai -m config left_padding 2
yabai -m config right_padding 2
yabai -m config window_gap 7

### DEFAULTS ####
# yabai -m config layout bsp
# yabai -m config top_padding 0 # 33 for monitor  #2 for mac
# yabai -m config bottom_padding 4
# yabai -m config left_padding 2
# yabai -m config right_padding 2
# yabai -m config window_gap 6

# #Ubersicht widget bar stuff
#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"

#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
#yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

#testing signals
# yabai -m signal --add event=window_destroyed action="terminal-notifier -message 'window_destroyed'"
# yabai -m signal --add event=application_terminated action="terminal-notifier -message 'application_terminated'"

## If I close the active window, focus on any other visible window.
# yabai -m signal --add event=window_destroyed action="bash /Users/aharo/.config/yabai/scripts/switchspaces/window-focus-on-destroy.sh"
# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""

echo "yabai configuration loaded.."

#END
