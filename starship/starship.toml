# path: ~/.config/starship/starship.toml

# ------------------------------------------------------------------------------
# GLOBAL PROMPT STRUCTURE
# - `format` controls the left prompt order (high-level). Here we render $all.
# - `right_format` renders on the right prompt (time in this setup).
# NOTE: The per-module visual/behavior is configured in sections below.
# ------------------------------------------------------------------------------

# Order of modules on prompt (left side)
format = """
 $all 
"""

# Right side of the prompt (clock only by default)
right_format = """$time """
### right_format = """$time $battery"""


# ==============================================================================
# DIRECTORY
# ==============================================================================
[directory]
style = "fg:#9b9578"
truncation_length = 4
truncate_to_repo = true
fish_style_pwd_dir_length = 3

[directory.substitutions]
"Documents" = " 󰧮 "
"Music" = "  "
"Movies" = " 󰿏 "
"Pictures" = " "
"Sources" = "  "
"Downloads" = "  "
# "~" = "  "
"~" = ""
"/" = "  "


# Single-line prompt (no blank line between modules and input)
[line_break]
disabled = true # leave as TRUE  

# Prompt character (final symbol only; success/error variants)
[character]
success_symbol = "[󰁔](fg:#9b9578)"
# success_symbol = "[](fg:#0bce98)"
# error_symbol = "[](fg:#d56767)[](fg:#d56767)"
error_symbol = "[](fg:#d56767) [󱠳](fg:#d56767) [](fg:#0bce98)"
format = "$symbol"
disabled = false


# ==============================================================================
# GIT (branch/commit/state/status)
# - Lightweight, fast indicators tailored for an always-on VCS workflow.
# - Note: if you hit performance issues, consider Starship’s global `command_timeout`
#   (top-level key) rather than adding it under a module that doesn’t support it.
# ==============================================================================
[git_branch]
disabled = false
symbol = " "
style = "fg:#a48989"
truncation_length = 5                                 # length == ABCDE
format = '[$symbol$branch(:$remote_branch)]($style) ' # this sets path ../../../../

[git_commit]
disabled = false
commit_hash_length = 1

[git_state]
disabled = false
rebase = "rebasing"
merge = "merging"
revert = "reverting"
cherry_pick = " picking"
bisect = "bisecting"
am = "am'ing"
am_or_rebase = "am/rebase"

[git_status]
disabled = false
style = "fg:#5F8575"
stashed = " ${count} "
ahead = "󰞙 ${count} "
behind = "󰞒 ${count} "
diverged = "󰵉 ${ahead_count} ${behind_count} "
conflicted = " ${count} "
deleted = " ${count} "
renamed = " ${count} "
modified = " ${count} "
staged = " ${count} "
untracked = "󱅘 ${count} "
# NOTE: `command_timeout` here would error; use the top-level `command_timeout` if needed.
# command_timeout = 2000   # or 0 to wait indefinitely ERROR HERE 


# ==============================================================================
# LANGUAGES & TOOLCHAINS
# - Minimal, uniform styling across runtimes for quick stack recognition.
# - Symbols prefixed with "•" to keep a low-contrast, elegant signal.
# ==============================================================================

[java]
disabled = false
symbol = "•  "
format = '[${symbol}]($style)'
style = "fg:#a48989"

[python]
disabled = false
pyenv_version_name = false
python_binary = 'python'
format = '[${symbol}(\($virtualenv\))]($style)'
style = "fg:#a48989"
symbol = "• 󱔎 "

[lua]
disabled = false
symbol = "•  "
format = '[${symbol}]($style)'
style = "fg:#a48989"

[nodejs]
disabled = false
symbol = "• 󰎙 "
format = '[${symbol}]($style)'
style = "fg:#a48989"

[package]
disabled = false
symbol = "•  "
display_private = false
format = '[${symbol}]($style)'
style = "fg:#a48989"

[docker_context]
disabled = false
symbol = "•  "
only_with_files = true
format = '[${symbol}]($style)'
style = "fg:#a48989"

[rust]
disabled = false
symbol = "• 󰰠 "
format = '[${symbol}]($style)'
style = "fg:#a48989"

[dotnet]
disabled = false
symbol = " "
format = '[${symbol}]($style)'
heuristic = true


# ==============================================================================
# RUNTIME / PERFORMANCE
# - Execution timing for long-running commands.
# ==============================================================================
[cmd_duration]
disabled = false
min_time = 2_000
show_milliseconds = false
show_notifications = false
min_time_to_notify = 45_000



# ╔════════════════════════════════════════════════════════════════════════════╗
# ║  ARCHITECT ADD-ONS (COMMENTED OUT)                                         ║
# ║  These are optional, production-proven snippets. They do NOTHING until     ║
# ║  you uncomment them. Your core configuration above remains intact.         ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# ------------------------------------------------------------------------------
# GLOBAL PERFORMANCE TUNING
# - If git-heavy repos feel slow, set a conservative command timeout globally.
# - This key must live at top-level (not within a module).
# ------------------------------------------------------------------------------
# command_timeout = 1200  # in milliseconds (e.g., 1.2s)

# ------------------------------------------------------------------------------
# RIGHT PROMPT ENHANCEMENTS
# - Keep time on the right; append ephemeral context (battery/wifi) for laptops.
# ------------------------------------------------------------------------------
# [time]
# disabled = false
# time_format = "  ⏲  %I:%M %P      %B %d, %Y    "
# style = "fg:#9b9578"
# format = '[$time]($style)'

# [battery]
# disabled = false
# full_symbol = " "
# charging_symbol = " "
# discharging_symbol = " "
# display = [{ threshold = 100, style = "fg:#d56767 bold" }]

# ------------------------------------------------------------------------------
# CLOUD & PLATFORM CONTEXT (AWS/GCP/K8s/Containers)
# ------------------------------------------------------------------------------
# [aws]
# disabled = false
# symbol = " "
# style = "fg:#a48989"
# format = '[$symbol($profile)(@$region)]($style)'

# [gcloud]
# disabled = false
# symbol = "󱇶 "
# style = "fg:#a48989"
# format = '[$symbol($project)]($style)'

# [kubernetes]
# disabled = false
# symbol = "󱃾 "
# style = "fg:#a48989"
# detect_files = ["k8s", "kubernetes", "kustomization.yaml", "Chart.yaml"]
# format = '[$sym]()
